<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mycat实现MySQL读写分离</title>
    <url>/2019/11/30/Mycat%E5%AE%9E%E7%8E%B0MySQL%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
    <content><![CDATA[<p>在主从下，mycat实现读写分离,主从搭建请阅读上一篇文章MySQL互为主从</p>
<p>配置环境变量,jdk自行官网下载</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># tar -xf jdk-8u181-linux-x64.tar.gz   -C  /usr/local/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># mv /usr/local/jdk-8u181-linux-x64 /usr/local/java</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># vim /etc/profile.d/java.sh</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># source /etc/profile.d/java.sh</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># java -version</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">java version <span class="string">"1.8.0_211"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span></pre></td></tr></table></figure>
<p>下载mycat</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># wget http://dl.mycat.io/1.6.5/Mycat-server-1.6.5-release-20180122220033-linux.tar.gz</span></span></pre></td></tr></table></figure>
<p>解压</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># tar xf Mycat-server-1.6.5-release-20180122220033-linux.tar.gz -C /usr/local/</span></span></pre></td></tr></table></figure>

<p>配置mycat,可删除原文用以下文档替换</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># vim /usr/local/mycat/conf/server.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE mycat:server SYSTEM <span class="string">"server.dtd"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;mycat:server xmlns:mycat=<span class="string">"http://io.mycat/"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;user name=<span class="string">"test"</span> defaultAccount=<span class="string">"true"</span>&gt;<span class="comment">##登录mycat的账号</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;property name=<span class="string">"password"</span>&gt;123456&lt;/property&gt;<span class="comment">##密码</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;property name=<span class="string">"schemas"</span>&gt;testing&lt;/property&gt;<span class="comment">##mycat上的库，逻辑库，并不存在</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/user&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/mycat:server&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># vim /usr/local/mycat/conf/schema.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE mycat:schema SYSTEM <span class="string">"schema.dtd"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;mycat:schema xmlns:mycat=<span class="string">"http://io.mycat/"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;schema name=<span class="string">"testing"</span> checkSQLschema=<span class="string">"true"</span> sqlMaxLimit=<span class="string">"100"</span> dataNode=<span class="string">"dn1"</span>&gt;<span class="comment">##对应的逻辑库名</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/schema&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;dataNode name=<span class="string">"dn1"</span> dataHost=<span class="string">"localhost1"</span> database=<span class="string">"testing"</span> /&gt;<span class="comment">#真实数据库名testing</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;dataHost name=<span class="string">"localhost1"</span> maxCon=<span class="string">"1000"</span> minCon=<span class="string">"10"</span> balance=<span class="string">"3"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                          writeType=<span class="string">"0"</span> dbType=<span class="string">"mysql"</span> dbDriver=<span class="string">"native"</span> switchType=<span class="string">"1"</span>  slaveThreshold=<span class="string">"100"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;heartbeat&gt;select user()&lt;/heartbeat&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;!-- can have multi write hosts --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;writeHost host=<span class="string">"hostM1"</span> url=<span class="string">"192.168.206.129:3306"</span> user=<span class="string">"root"</span><span class="comment">##授权给mycat链接数据库的账号密码，记得真实数据库授权</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                                   password=<span class="string">"123456"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;!-- can have multi <span class="built_in">read</span> hosts --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        &lt;readHost host=<span class="string">"hostS2"</span> url=<span class="string">"192.168.206.138:3306"</span> user=<span class="string">"root"</span> password=<span class="string">"123456"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;/writeHost&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/dataHost&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/mycat:schema&gt;</span></pre></td></tr></table></figure>
<p>启动mycat</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># /usr/local/mycat/bin/mycat  start</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">支持以下参数</span></pre></td></tr><tr><td class="code"><pre><span class="line">start | restart |stop | status</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># jps</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">98538 Jps</span></pre></td></tr><tr><td class="code"><pre><span class="line">1949 WrapperSimpleApp</span></pre></td></tr><tr><td class="code"><pre><span class="line">此时mycat启动成功，若无此情况，启动失败</span></pre></td></tr></table></figure>
<p>真实数据库上授权，和schema文件中相对应</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; grant all on testing.* to root@'%' identified by '123456';</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span></pre></td></tr></table></figure>
<p>在mycat机器上下载mysql客户端测试授权用户是否可以登录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># yum -y install mysql</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># mysql -uroot -p'123456' -h192.168.206.129</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># mysql -uroot -p'123456' -h192.168.206.138</span></span></pre></td></tr></table></figure>
<p>登录mycat</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># mysql -utest -p123456 -h192.168.206.140 -P 8066</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Your MySQL connection id is 3</span></pre></td></tr><tr><td class="code"><pre><span class="line">Server version: 5.6.29-mycat-1.6.5-release-20180122220033 MyCat Server (OpenCloundDB)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">MySQL [(none)]&gt; </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">可查看mycat日志验证读写分离，或者停止主从复制，验证后恢复</span></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">schema</span></pre></td></tr><tr><td class="code"><pre><span class="line">schema标签用来定义mycat实例中的逻辑库，mycat可以有多个逻辑库，每个逻辑库都有自己的相关配置。可以使用schema标签来划分这些不同的逻辑库。如果不配置schema标签，所有表的配置会属于同一个默认的逻辑库。逻辑库的概念和MySql的database的概念一样，我们在查询两个不同逻辑库中的表的时候，需要切换到该逻辑库下进行查询。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dataNode</span></pre></td></tr><tr><td class="code"><pre><span class="line">该标签用于绑定逻辑库到某个具体的database上。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">checkSQLschema </span></pre></td></tr><tr><td class="code"><pre><span class="line">当该值为true时，例如我们执行语句<span class="keyword">select</span> * <span class="keyword">from</span> TESTDB.company 。mycat会把语句修改为 <span class="keyword">select</span> * <span class="keyword">from</span> company 去掉TESTDB。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">sqlMaxLimit </span></pre></td></tr><tr><td class="code"><pre><span class="line">当该值设置为某个数值时，每条执行的<span class="keyword">sql</span>语句，如果没有加上<span class="keyword">limit</span>语句，Mycat会自动加上对应的值。不写的话，默认返回所有的值，需要注意的是，如果运行的<span class="keyword">schema</span>为非拆分库的，那么该属性不会生效。需要自己<span class="keyword">sql</span>语句加<span class="keyword">limit</span>。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">table</span> 标签</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">table</span> <span class="keyword">name</span>=<span class="string">"travelrecord"</span> dataNode=<span class="string">"dn1,dn2,dn3"</span> rule=<span class="string">"auto-sharding-long"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">table</span>标签定义了mycat中的逻辑表，所有需要拆分的表都需要在这个标签中定义。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">name</span>属性</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">name</span>属性代表了逻辑表的表名，同一个<span class="keyword">schema</span>中<span class="keyword">name</span>标签中定义的名字必须唯一。如同我们在数据库执行<span class="keyword">create</span> <span class="keyword">table</span> 命令指定的名字一样。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dataNode属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">定义这个逻辑表所属的dataNode，该属性的值需要和dataNode标签中的<span class="keyword">name</span>值相对应。如果需要定义的dn非常多，可以使用如下方法定义</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">table</span> <span class="keyword">name</span>=<span class="string">"travelrecord"</span> dataNode=<span class="string">"multipleDn$0-99,multipleDn2$100-199"</span> rule=<span class="string">"auto-sharding- long"</span> &gt;&lt;/<span class="keyword">table</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dataNode <span class="keyword">name</span>=<span class="string">"multipleDn"</span> dataHost=<span class="string">"localhost1"</span> <span class="keyword">database</span>=<span class="string">"db$0-99"</span> &gt;&lt;/dataNode&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dataNode <span class="keyword">name</span>=<span class="string">"multipleDn2"</span> dataHost=<span class="string">"localhost1"</span> <span class="keyword">database</span>=<span class="string">" db$0-99"</span> &gt;&lt;/dataNode&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">database</span>属性所指的真实databas <span class="keyword">name</span>需要在mysql中存在，比如上面例子中，我们需要在mysql中建立名称为dbs0到dbs99的<span class="keyword">database</span>。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">rule属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">该属性指定逻辑表使用的规则名字，规则名字在rule.xml中定义，必须与tableRule标签中<span class="keyword">name</span>属性对应。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">ruleRequired属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">该属性用于指定是否绑定分片规则，如果配置为<span class="literal">true</span>，但是没有配置具体rule时候，就会报错</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">primaryKey属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">该属性代表了，逻辑表对应真实表的主键。例如：分片的规则是使用非主键进行分片的，那么在使用主键查询的时候，就会发送查询语句到所有配置的DN上，如果使用该属性配置真实表的主键，那么mycat会缓存主键与具体DN的信息，那么再次使用非主键进行查询的时候就不会进行广播式的查询，就会直接发送语句给具体的DN，但是尽管配置该属性，如果缓存并没有命中的话，还是会发送语句给具体的DN 来获取数据。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">type</span>属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">该属性定义了逻辑表的类型，目前逻辑表只有全局表和普通表。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">全局表： <span class="keyword">global</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">普通表：无</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">autoIncrement属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql对非自增长主键，使用<span class="keyword">last_insert_id</span>() 是不会返回结果的，只会返回<span class="number">0.</span>所以，只有定义了自增长主键的表，才可以用<span class="keyword">last_insert_id</span>()返回主键值。</span></pre></td></tr><tr><td class="code"><pre><span class="line">mycat提供了自增长主键功能，但是对应的mysql节点上数据表，没有auto_increment,那么在mycat层调用<span class="keyword">last_insert_id</span>()也是不会返回结果的。如果使用这个功能，最好配合使用数据库模式的全局序列。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">needAddLimit </span></pre></td></tr><tr><td class="code"><pre><span class="line">指定表是否需要自动的在每个语句后面加上<span class="keyword">limit</span>限制，由于使用了分库分表，数据量有时候会特别庞大，这时候执行查询语句，忘记加上limt就会等好久，所以mycat自动为我们加上了<span class="keyword">limit</span> <span class="number">100</span>，这个属性默认为<span class="literal">true</span>，可以自己设置为<span class="literal">false</span>禁用。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dataNode标签</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dataNode <span class="keyword">name</span>=<span class="string">"dn1"</span> dataHost=<span class="string">"localhost1"</span> <span class="keyword">database</span>=<span class="string">"db1"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">datanode标签定义了mycat中的数据节点，也就是我们所说的数据分片。一个datanode标签就是一个独立的数据分片。例子中的表述的意思为，使用名字为localhost1数据库实例上的db1物理数据库，这就组成一个数据分片，最后我们用dn1来标示这个分片。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">name</span>：定义数据节点的名字，这个名字需要唯一。我们在<span class="keyword">table</span>标签上用这个名字来建立表与分片对应的关系</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dataHost</span></pre></td></tr><tr><td class="code"><pre><span class="line">用于定义该分片属于哪个数据库实例，属性与datahost标签上定义的<span class="keyword">name</span>对应</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">database</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">用于定义该分片属于数据库实例上的具体库。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dataHost标签</span></pre></td></tr><tr><td class="code"><pre><span class="line">这个标签直接定义了具体数据库实例，读写分离配置和心跳语句。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">name</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">唯一标示dataHost标签，供上层使用</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">maxCon</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定每个读写实例连接池的最大连接。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">minCon</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定每个读写实例连接池的最小连接，初始化连接池的大小</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">balance</span></pre></td></tr><tr><td class="code"><pre><span class="line">负载均称类型</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">0</span>：不开启读写分离机制，所有读操作都发送到当前可用的writeHost上</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">1</span>：全部的readHost与stand <span class="keyword">by</span> writeHost参与<span class="keyword">select</span>语句的负载均衡，简单的说，当双主双从模式（M1-S1，M2-S2 并且M1 M2互为主备），正常情况下，M2,S1,S2都参与<span class="keyword">select</span>语句的负载均衡。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">2</span>：所有读操作都随机的在writeHost、readHost上分发</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">3</span>：所有读请求随机的分发到writeHst对应的readHost执行，writeHost不负担读写压力。（<span class="number">1.4</span>之后版本有）</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">writeType属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">负载均衡类型。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">0</span>：所有的写操作发送到配置的第一个writeHost，第一个挂了切换到第二个。切换记录在文件dnindex.properties</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">1</span>：所有的鞋操作都随机的发送到配置的writeHost，<span class="number">1.5</span>以后版本废弃不推荐。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">switchType属性</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">-1</span>不自动切换</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">1</span> 默认值 自动切换</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="number">2</span> 基于MySql主从同步的状态决定是否切换</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">心跳语句为 <span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">基于mysql galary cluster 的切换机制（适合集群）<span class="number">1.4</span><span class="number">.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">心跳语句为 <span class="keyword">show</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'wsrep%'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dbType</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定后端链接的数据库类型目前支持二进制的mysql协议，还有其他使用jdbc链接的数据库，例如：mongodb，<span class="keyword">oracle</span>，spark等</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">dbDriver属性</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定连接后段数据库使用的driver，目前可选的值有<span class="keyword">native</span>和JDBC。使用<span class="keyword">native</span>的话，因为这个值执行的是二进制的mysql协议，所以可以使用mysql和maridb，其他类型的则需要使用JDBC驱动来支持。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">如果使用JDBC的话需要符合JDBC4标准的驱动jar 放到mycat\lib目录下，并检查驱动jar包中包括如下目录结构文件 META-INF\services\java.sql.Driver。  在这个文件写上具体的driver类名，例如com.mysql.jdbc.Driver</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">若主从不同步，请参照上一篇文章MySQL互为主从修改</span></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>hexo+git搭建个人博客</title>
    <url>/2019/11/29/hexo+git%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>以下步骤均在centos7上执行</p>
<p>环境准备和安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install git-core -y  //安装git</span></pre></td></tr><tr><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh  //安装node.js,重启服务器执行以下</span></pre></td></tr><tr><td class="code"><pre><span class="line">nvm install nod		//安装node</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install -g hexo-cli		//安装hexo</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo init Blog		//在当前位置创建hexo工作目录,可自选</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd Blog/		//进入目录</span></pre></td></tr><tr><td class="code"><pre><span class="line">install	</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo g			//生成静态网页</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo -v			//查看版本</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo s &amp;		//后台启动,此时可在浏览器输入本机ip和端口号访问博客</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save		//和git联系用</span></pre></td></tr></table></figure>


<p>配置git<br>创建一个库，库名为用户名.github.io,如TheKool.github.io<br>此时可以看到一栏https/ssh，点击ssh，复制后面的地址，我的是<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:TheKool/TheKool.github.io.git后面配置站点配置文件要用到<br>在seeting里下拉创建一个pages</p>
<p>设置Git的user name和email</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name "TheKool"</span></pre></td></tr><tr><td class="code"><pre><span class="line">git config --global user.email "1932944168@qq.com"</span></pre></td></tr></table></figure>

<p>配置密钥登录git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "1932944168@qq.com" //生成密钥,连续三个回车</span></pre></td></tr><tr><td class="code"><pre><span class="line">eval "$(ssh-agent -s)" //设置自动启动 ssh-agent</span></pre></td></tr><tr><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa  //添加生成的 SSH key 到 ssh-agen</span></pre></td></tr><tr><td class="code"><pre><span class="line">vim /root/.ssh/id_rsa.pub</span></pre></td></tr><tr><td class="code"><pre><span class="line">登陆Github, 添加 ssh,把id_rsa.pub文件里的内容复制到SSH KEY</span></pre></td></tr><tr><td class="code"><pre><span class="line">ssh -T git@github.com  //测试是否成功</span></pre></td></tr><tr><td class="code"><pre><span class="line">Hi TheKool! You've successfully authenticated, but GitHub does not provide shell access.</span></pre></td></tr><tr><td class="code"><pre><span class="line">看到以上成功</span></pre></td></tr></table></figure>

<p>站点配置文件配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim _config.yml    //配置以下</span></pre></td></tr><tr><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  type: git</span></pre></td></tr><tr><td class="code"><pre><span class="line">  repo: git@github.com:TheKool/TheKool.github.io.git</span></pre></td></tr><tr><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></table></figure>
<p>配置完成后执行以下,即可发布到github</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy</span></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>MySQL互为主从(GTID)</title>
    <url>/2019/11/29/MySQL%E4%BA%92%E4%B8%BA%E4%B8%BB%E4%BB%8E-GTID/</url>
    <content><![CDATA[<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GTID互为主从</span></pre></td></tr><tr><td class="code"><pre><span class="line">数据库版本mysql-5.7.25 192.168.206.129 192.168.206.138，源码安装</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># service mysqld stop</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/my.cnf    //确保以下配置,server不能一样</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">server_id = 138</span></pre></td></tr><tr><td class="code"><pre><span class="line">gtid_mode = on</span></pre></td></tr><tr><td class="code"><pre><span class="line">enforce_gtid_consistency = 1</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">log</span>-bin=mysqld-bin</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">server_id = 129</span></pre></td></tr><tr><td class="code"><pre><span class="line">gtid_mode = on</span></pre></td></tr><tr><td class="code"><pre><span class="line">enforce_gtid_consistency = 1</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">log</span>-bin=mysqld-bin				//不指定路径即为数据库data目录下mysqld-bin</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># service mysqld start</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysql -uroot -p</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">创建给从服务器连接自己的用户,给予复制权限</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">'xzj'</span>@<span class="string">'%'</span> identified by <span class="string">'123'</span>;	//%为局域网内所有机器，可写ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">'xzj'</span>@<span class="string">'%'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">192.168.206.138执行</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show master status\G</span></pre></td></tr><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span></pre></td></tr><tr><td class="code"><pre><span class="line">             File: mysqld-bin.000012</span></pre></td></tr><tr><td class="code"><pre><span class="line">         Position: 745</span></pre></td></tr><tr><td class="code"><pre><span class="line">     Binlog_Do_DB: </span></pre></td></tr><tr><td class="code"><pre><span class="line"> Binlog_Ignore_DB: </span></pre></td></tr><tr><td class="code"><pre><span class="line">Executed_Gtid_Set: 1e795453-6320-11e9-b789-000c29a006aa:1-3</span></pre></td></tr><tr><td class="code"><pre><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_HOST=<span class="string">'192.168.206.129'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_USER=<span class="string">'xzj'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_PASSWORD=<span class="string">'123'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_LOG_FILE=<span class="string">'mysqld-bin.000008'</span>,		//和129show master status对应</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_LOG_POS=745;						//和129show master status对应</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">192.168.206.129执行</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show master status\G</span></pre></td></tr><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span></pre></td></tr><tr><td class="code"><pre><span class="line">             File: mysqld-bin.000008</span></pre></td></tr><tr><td class="code"><pre><span class="line">         Position: 745</span></pre></td></tr><tr><td class="code"><pre><span class="line">     Binlog_Do_DB: </span></pre></td></tr><tr><td class="code"><pre><span class="line"> Binlog_Ignore_DB: </span></pre></td></tr><tr><td class="code"><pre><span class="line">Executed_Gtid_Set: 1e795453-6320-11e9-b789-000c29a006aa:1-3</span></pre></td></tr><tr><td class="code"><pre><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_HOST=<span class="string">'192.168.206.138'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_USER=<span class="string">'xzj'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_PASSWORD=<span class="string">'123'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_LOG_FILE=<span class="string">'mysqld-bin.000012'</span>,   //和138上show master对应</span></pre></td></tr><tr><td class="code"><pre><span class="line">    -&gt; MASTER_LOG_POS=745;					//和138上show master对应</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">----------------------------------------------------------------------</span></pre></td></tr><tr><td class="code"><pre><span class="line">129：</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; start slave;</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span></pre></td></tr><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span></pre></td></tr><tr><td class="code"><pre><span class="line">               Slave_IO_State: </span></pre></td></tr><tr><td class="code"><pre><span class="line">                  Master_Host: 192.168.206.138</span></pre></td></tr><tr><td class="code"><pre><span class="line">                  Master_User: xzj</span></pre></td></tr><tr><td class="code"><pre><span class="line">                  Master_Port: 3306</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Connect_Retry: 60</span></pre></td></tr><tr><td class="code"><pre><span class="line">              Master_Log_File: mysqld-bin.000012</span></pre></td></tr><tr><td class="code"><pre><span class="line">          Read_Master_Log_Pos: 745</span></pre></td></tr><tr><td class="code"><pre><span class="line">               Relay_Log_File: localhost-relay-bin.000001</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Relay_Log_Pos: 4</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Relay_Master_Log_File: mysqld-bin.000012</span></pre></td></tr><tr><td class="code"><pre><span class="line">             Slave_IO_Running: Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Slave_SQL_Running: Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ......</span></pre></td></tr><tr><td class="code"><pre><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">----------------------------------------------------------------------</span></pre></td></tr><tr><td class="code"><pre><span class="line">138：</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; start slave；</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span></pre></td></tr><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span></pre></td></tr><tr><td class="code"><pre><span class="line">               Slave_IO_State: </span></pre></td></tr><tr><td class="code"><pre><span class="line">                  Master_Host: 192.168.206.129</span></pre></td></tr><tr><td class="code"><pre><span class="line">                  Master_User: xzj</span></pre></td></tr><tr><td class="code"><pre><span class="line">                  Master_Port: 3306</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Connect_Retry: 60</span></pre></td></tr><tr><td class="code"><pre><span class="line">              Master_Log_File: mysqld-bin.000012</span></pre></td></tr><tr><td class="code"><pre><span class="line">          Read_Master_Log_Pos: 194</span></pre></td></tr><tr><td class="code"><pre><span class="line">               Relay_Log_File: localhost-relay-bin.000011</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Relay_Log_Pos: 255</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Relay_Master_Log_File: mysqld-bin.000012</span></pre></td></tr><tr><td class="code"><pre><span class="line">             Slave_IO_Running: Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Slave_SQL_Running: Yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">             ......</span></pre></td></tr><tr><td class="code"><pre><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">注意事项</span></pre></td></tr><tr><td class="code"><pre><span class="line">auto.cnf里uuid是否一致，若一致则配置主从失败,若有数据，做主从前先迁移数据,一般为/var/lib/mysql/auto.cnf</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mysql ~]<span class="comment"># mysqldump -uroot -p123 --all-databases &gt; alldb.sql</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">如果导出不了</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mysql ~]<span class="comment"># mysql_upgrade -uroot -p123 force</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">从库导入</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mysql ~]<span class="comment"># mysql -uroot -p123 &lt; alldb.sql</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">*暴力拷贝,拷贝库文件夹和db*</span></pre></td></tr><tr><td class="code"><pre><span class="line">1、拷贝原数据到目标目录后，记得将权限改为mysql</span></pre></td></tr><tr><td class="code"><pre><span class="line">2、uuid 需要修改，但是要在启动mysql成功之后再进行修改</span></pre></td></tr><tr><td class="code"><pre><span class="line">3、初始化密码未修改时，不能关闭密码强度策略</span></pre></td></tr><tr><td class="code"><pre><span class="line">4、密码强度策略不能和跳过密码配置同时添加</span></pre></td></tr><tr><td class="code"><pre><span class="line">5、初始化之前必须先停用mysql，然后把数据目录全部清理掉</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">reset master</span></pre></td></tr><tr><td class="code"><pre><span class="line">删除所有的binglog日志文件，并将日志索引文件清空，重新开始所有新的日志文件。用于第一次进行搭建主从库时，进行主库binlog初始化工作，不能用于有任何slave 正在运行的主从关系的主库</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">reset slave</span></pre></td></tr><tr><td class="code"><pre><span class="line">用于删除SLAVE数据库的relaylog日志文件，并重新启用新的relaylog文件，使用reset slave之前必须使用stop slave 命令将复制进程停止</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">重置主从，用于主从异常，且无法解决时，相当于遇到电脑问题时暴力重装</span></pre></td></tr><tr><td class="code"><pre><span class="line">1. 停止slave服务器的主从同步</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; STOP SLAVE;</span></pre></td></tr><tr><td class="code"><pre><span class="line">2.对master服务器的数据库加锁</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; FLUSH TABLES WITH READ LOCK;</span></pre></td></tr><tr><td class="code"><pre><span class="line">3.备份master上的数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mysql ~]<span class="comment"># mysqldump -uroot -p --all-databases &gt; alldb.sql</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">4.重置master服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; RESET MASTER;</span></pre></td></tr><tr><td class="code"><pre><span class="line">5.对master服务器的数据库解锁</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; UNLOCK TABLES;</span></pre></td></tr><tr><td class="code"><pre><span class="line">6.将master上的备份文件拷贝到slave服务器上</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@mysql ~]<span class="comment"># scp -r root@XXX.XXX.XXX.<span class="doctag">XXX:</span>/root/bak.sql ./</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">7.删除slave服务器上的旧数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; DROP DATABASE db1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; DROP DATABASE db2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">8.导入数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; SOURCE /root/bak.sql;</span></pre></td></tr><tr><td class="code"><pre><span class="line">9.重置slave服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; RESET SLAVE;</span></pre></td></tr><tr><td class="code"><pre><span class="line">10.开启slave服务</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; START SLAVE;</span></pre></td></tr><tr><td class="code"><pre><span class="line">11.检查同步转态</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; SHOW SLAVE STATUS\G</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">如果不能同步，或者之前的<span class="built_in">log</span>-bin 丢失，可以使用新的同步点，步骤如下:(保证两个数据库数据一致,若不一致会失败,解决方法在最后)</span></pre></td></tr><tr><td class="code"><pre><span class="line">从服务器操作：</span></pre></td></tr><tr><td class="code"><pre><span class="line">停止slave</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; stop slave;</span></pre></td></tr><tr><td class="code"><pre><span class="line">主服务器刷新日志：</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; flush logs;</span></pre></td></tr><tr><td class="code"><pre><span class="line">查看主服务器日志点记录下：file 和position 位置；</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show master status\G;</span></pre></td></tr><tr><td class="code"><pre><span class="line">切换到从服务器，修改从服务器同步点</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">'mysqld-bin.000013'</span>,MASTER_LOG_POS=194;</span></pre></td></tr><tr><td class="code"><pre><span class="line">启动从服务器：</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; start slave;</span></pre></td></tr><tr><td class="code"><pre><span class="line">查看从服务器同步状态：</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">若两个数据库数据不一直，且主从正常，说明在重置主从期间，主服务器产生了新的数据，且读取的bin-log为写入新数据后产生的，此时从服务器就同步不了之前主服务器的数据，导致数据不一致，结局方法为改变读取的binlog和pos值。如</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; show binlog events <span class="keyword">in</span> <span class="string">'mysqld-bin.000001'</span>;	//查看一个较早的bin-log日志（要确定产生此bin-log日志时数据是完全一致的）</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-------------------+-----+----------------+-----------+-------------+---------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">| Log_name          | Pos | Event_type     | Server_id | End_log_pos | Info                                  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-------------------+-----+----------------+-----------+-------------+---------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">| mysqld-bin.000001 |   4 | Format_desc    |        11 |         123 | Server ver: 5.7.25-log, Binlog ver: 4 |</span></pre></td></tr><tr><td class="code"><pre><span class="line">| mysqld-bin.000001 | 123 | Previous_gtids |        11 |         154 |                                       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">| mysqld-bin.000001 | 154 | Stop           |        11 |         177 |                                       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-------------------+-----+----------------+-----------+-------------+---------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">'mysqld-bin.000001'</span>,MASTER_LOG_POS=4;	//修改读取的bin-log和对应的pos值，使从服务器从此时开始读取，便可重新同步数据</span></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
